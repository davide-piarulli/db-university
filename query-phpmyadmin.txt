****************SELECT*****************
1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT
    *
FROM
    `students`
WHERE
    YEAR(`date_of_birth`) = '1990'


2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT
    *
FROM
    `courses`
WHERE
    `cfu` > '10'

3. Selezionare tutti gli studenti che hanno più di 30 anni
(qui non sono sicuro sia giusto, ma ho trovato il YEAR(CURRENT_DATE) e mi sembra funzionare, ma non mi avete fornito il risultato finale)

SELECT
    *
FROM
    `students`
WHERE
    YEAR(CURRENT_DATE) - YEAR(`date_of_birth`) > '30'
WHERE TIMESTAMPDIFF(YEAR, `date_of_birth`, CURDATE()) >30


4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea (286)

SELECT
    *
FROM
    `courses`
WHERE
    `period` = 'I semestre'
AND
	`year` = '1'

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 (21)

SELECT
    *
FROM
    `exams`
WHERE
    `date` = '2020-06-20'
AND
	`hour` >= '14:00:00'

6. Selezionare tutti i corsi di laurea magistrale (38)

SELECT
    *
FROM
    `degrees`
WHERE
    `level` = 'magistrale'

7. Da quanti dipartimenti è composta l'università? (12)

SELECT
    COUNT(*) as `dipartimenti`
FROM
    `departments`

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)

SELECT
    COUNT(*) AS `insegnanti`
FROM
    `teachers`
WHERE
    `phone` IS NULL
****************SELECT*****************



**************GROUP BY********************

1. Contare quanti iscritti ci sono stati ogni anno

SELECT
    COUNT(*) AS `iscritti`,
    YEAR(`enrolment_date`) AS `anno`
FROM
    `students`
GROUP BY
	`anno`


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT
    COUNT(*) as `insegnanti`, `office_address` AS `edificio`
FROM
    `teachers`
GROUP BY
	`edificio`

3. Calcolare la media dei voti di ogni appello d'esame

SELECT
    AVG(`vote`) AS `media_voti`, `exam_id` AS `appello_esame`
FROM
    `exam_student`
GROUP BY
	`exam_id`

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT
    COUNT(*) AS `corsi_di_laurea`
FROM
    `degrees`
GROUP BY
	`department_id`
**************GROUP BY********************

*************JOIN*************************
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT
    `students`.*
FROM
    `degrees`
INNER JOIN `students` ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia'

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT
    `degrees`.`name`, `degrees`.`department_id`
FROM
    `degrees`
INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
WHERE `degrees`.`level` = 'magistrale' AND `departments`.`name` = 'Dipartimento di Neuroscienze'

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT
    `teachers`.`name`,
    `teachers`.`surname`,
    `courses`.`name` AS `corso`
FROM
    `degrees`
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE
    `teachers`.`id` = 44

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT
    `students`.`name`,
    `students`.`surname`,
    `degrees`.`name` AS `corso_di_laurea`,
    `degrees`.`level`,
    `departments`.`name` AS `dipartimento`
FROM
    `students`
INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
ORDER BY
    `students`.`surname`, `students`.`name`

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT
    `degrees`.`id`,
    `degrees`.`name`AS `corso_laurea`,
    `courses`.`name` AS `nome_corso`,
    `teachers`.`name`,
    `teachers`.`surname`
FROM
	`degrees`
INNER JOIN `courses` ON `degrees`.`id`= `courses`.`degree_id`
INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)



7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.



*************JOIN*************************